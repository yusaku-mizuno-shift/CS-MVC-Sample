
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 11433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: An9xsUzp

    env:
      sqlServerContainerName: 'sqlserver'
      sqlServerPassword: 'An9xsUzp'
      sqlServerPort: 11433
      sqlOptions: 'Server=localhost,11433;Database=YourTestDb;User Id=sa;Password=An9xsUzp;'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Print Env
      run: printenv | sort

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.x'

    - name: Test project
      run: |
        dotnet test MvcMovieTests/MvcMovieTests.csproj --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura
        ls -a MvcMovieTests/TestResults
      env:
        sqlOptions: ${{ env.sqlOptions }}

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ' MvcMovieTests/TestResults/*.trx'

    - name: Publish Code Coverage Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: '**/coverage.cobertura.xml'

    # - name: Build project
    #   run: dotnet build MvcMovie/MvcMovie.csproj