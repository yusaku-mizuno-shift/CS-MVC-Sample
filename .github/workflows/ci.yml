
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: windows-latest

    # services:
    #   sqlserver:
    #     image: mcr.microsoft.com/mssql/server:2022-latest
    #     ports:
    #       - 11433:1433
    #     env:
    #       ACCEPT_EULA: Y
    #       SA_PASSWORD: An9xsUzp

    env:
      sqlServerContainerName: 'sqlserver'
      sqlServerPassword: 'An9xsUzp'
      sqlServerPort: 11433
      sqlOptions: 'Server=localhost,11433;Database=YourTestDb;User Id=sa;Password=An9xsUzp;'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Print Env
      run: printenv | sort

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.x'

    # - name: Test project
    #   run: |
    #     dotnet test MvcMovieTests/MvcMovieTests.csproj --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura --logger "trx;LogFileName=test-results.trx"
    #     ls -a MvcMovieTests/TestResults
    #   env:
    #     sqlOptions: ${{ env.sqlOptions }}

    # - name: Publish Test Results
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: test-results
    #     path: ' **/TestResults/test-results.trx'

    # - name: Publish Code Coverage Results
    #   if: always()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: code-coverage
    #     path: '**/coverage.cobertura.xml'
    - name: Restore dependencies
      run: dotnet restore

    # - name: Build project
    #   run: dotnet build MvcMovie/MvcMovie.csproj
    - name: Build project
      run: dotnet build --no-restore