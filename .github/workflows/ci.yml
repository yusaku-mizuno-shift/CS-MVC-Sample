
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 11433:1433
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: An9xsUzp

    env:
      sqlServerContainerName: 'sqlserver'
      sqlServerPassword: 'An9xsUzp'
      sqlServerPort: 11433
      sqlOptions: 'Server=localhost,11433;Database=YourTestDb;User Id=sa;Password=An9xsUzp;'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Print Env
      run: printenv | sort

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Test project
      run: |
        dotnet test --no-build MvcMovieTests/MvcMovieTests.csproj --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura --logger "trx;LogFileName=test-results.trx"
      env:
        sqlOptions: ${{ env.sqlOptions }}

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ' **/TestResults/test-results.trx'

    - name: Check coverage threshold
      id: check-coverage
      run: |
        COVERAGE=$(grep -oP '(?<=line-rate=")[^"]*' coverage/cobertura.xml | awk '{s+=$1} END {print s/NR*100}')
        echo "Coverage is $COVERAGE%"
        if (( $(echo "$COVERAGE < 85" | bc -l) )); then
          echo "Coverage is below threshold"
          exit 1
        fi
      shell: bash
      
    - name: Publish Code Coverage Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage
        path: '**/coverage.cobertura.xml'

    - name: Roslyn Analysis(Build)
      run: dotnet build MvcMovie/MvcMovie.csproj --no-restore