trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sqlServerContainerName: 'sqlserver-linux'
  sqlServerPassword: 'SA_PASSWORD'
  sqlServerPort: 1433

# services:
#   mssql:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     env:
#       ACCEPT_EULA: Y
#       SA_PASSWORD: SA_PASSWORD
#     ports:
#     - 1433:1433

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'

- script: |
    docker pull mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Pull SQL Server Linux container image'

- script: |
    docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=$(sqlServerPassword)' -p $(sqlServerPort):1433 --name $(sqlServerContainerName) -d mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Start SQL Server Linux container'

- script: |
    docker logs $(sqlServerContainerName)
  displayName: 'docker logs'

- script: |
    docker exec -it $(sqlServerContainerName) /opt/mssql/bin/sqlservr
  displayName: 'sql server start'

- script: |
    docker logs $(sqlServerContainerName)
  displayName: 'docker logs2'

- script: |
    docker exec -it $(sqlServerContainerName) ps aux | grep sqlservr
  displayName: 'sql server check'
  
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  displayName: 'dotnet restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'MvcMovie/MvcMovie.csproj'
  displayName: 'dotnet build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'MvcMovieTests/MvcMovieTests.csproj'
  displayName: 'dotnet test'

- script: |
    docker stop $(sqlServerContainerName)
    docker rm $(sqlServerContainerName)
  displayName: 'Stop and remove SQL Server Linux container'
