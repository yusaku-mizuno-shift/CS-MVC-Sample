trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sqlServerContainerName: 'sqlserver'
  sqlServerPassword: 'An9xsUzp'
  sqlServerPort: 11433
  sqlOptions: 'Server=localhost,11433;Database=YourTestDb;User Id=sa;Password=An9xsUzp;'

# services:
#   mssql:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     env:
#       ACCEPT_EULA: Y
#       MSSQL_SA_PASSWORD: $(sqlServerPassword)
#     ports:
#     - $(sqlServerPort):1433

steps:
- script: |
    printenv | sort
  displayName: 'Print Env'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'

- script: |
    docker pull mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Pull SQL Server Linux container image'

- script: |
    docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=$(sqlServerPassword)' -p $(sqlServerPort):1433 --name $(sqlServerContainerName) --hostname $(sqlServerContainerName) -d mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Start SQL Server Linux container'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  displayName: 'dotnet restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'MvcMovie/MvcMovie.csproj'
  displayName: 'dotnet build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'MvcMovieTests/MvcMovieTests.csproj'
  displayName: 'dotnet test'
  env:
    sqlOptions: $(sqlOptions)

- script: |
    docker stop $(sqlServerContainerName)
    docker rm $(sqlServerContainerName)
  displayName: 'Stop and remove SQL Server Linux container'
