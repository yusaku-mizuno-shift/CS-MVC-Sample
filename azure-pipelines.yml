trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sqlServerContainerName: 'sqlserver'
  sqlServerPassword: 'MSSQL_SA_PASSWORD'
  sqlServerPort: 1433

# services:
#   mssql:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     env:
#       ACCEPT_EULA: Y
#       MSSQL_SA_PASSWORD: MSSQL_SA_PASSWORD
#     ports:
#     - 1433:1433

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'

- script: |
    docker pull mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Pull SQL Server Linux container image'

- script: |
    docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=$(sqlServerPassword)' -p $(sqlServerPort):1433 --name $(sqlServerContainerName) --hostname sqlserverhost -d mcr.microsoft.com/mssql/server:2022-latest
  displayName: 'Start SQL Server Linux container'

- script: |
    docker ps
  displayName: 'docker ps'

- script: |
    docker inspect $(sqlServerContainerName)
  displayName: 'docker inspect'

- script: |
    docker exec $(sqlServerContainerName) hostname
  displayName: 'docker check hostname'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
  displayName: 'dotnet restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'MvcMovie/MvcMovie.csproj'
  displayName: 'dotnet build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'MvcMovieTests/MvcMovieTests.csproj'
  displayName: 'dotnet test'

- script: |
    docker stop $(sqlServerContainerName)
    docker rm $(sqlServerContainerName)
  displayName: 'Stop and remove SQL Server Linux container'
