trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  sqlServerContainerName: 'sqlserver'
  sqlServerPassword: 'An9xsUzp'
  sqlServerPort: 11433
  sqlOptions: 'Server=localhost,11433;Database=YourTestDb;User Id=sa;Password=An9xsUzp;'
  testResultsDir: 'TestResults'
  coverageDir: 'CoverageResults'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
    - $(sqlServerPort):1433
    env:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: $(sqlServerPassword)

steps:
- script: |
    printenv | sort
  displayName: 'Print Env'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'

- script: |
    dotnet nuget locals all --clear
  displayName: 'Clear NuGet Cache'

- script: |
    mkdir -p $(System.DefaultWorkingDirectory)/MvcMovieTests/$(coverageDir)
    dotnet test MvcMovieTests/MvcMovieTests.csproj --logger "trx;LogFileName=test_results.trx" /p:CollectCoverage=true /p:CoverletOutput=$(System.DefaultWorkingDirectory)/MvcMovieTests/$(coverageDir)/coverage.cobertura.xml /p:CoverletOutputFormat=cobertura
    echo '----------------------------------------------------------------'
    ls $(System.DefaultWorkingDirectory)/MvcMovieTests/TestResults
    echo '----------------------------------------------------------------'
    ls $(System.DefaultWorkingDirectory)/MvcMovieTests/$(coverageDir)
  displayName: 'dotnet test'

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet test'
#   inputs:
#     command: 'test'
#     projects: 'MvcMovieTests/MvcMovieTests.csproj'
#     arguments: '--collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura'
#   env:
#     sqlOptions: $(sqlOptions)

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/MvcMovieTests/TestResults/test_results.trx'
    failTaskOnFailedTests: true
  displayName: 'Publish Test Results'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/MvcMovieTests/$(coverageDir)/coverage.cobertura.xml'
  displayName: 'Publish Code Coverage Results'

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet build'
#   inputs:
#     command: 'build'
#     projects: 'MvcMovie/MvcMovie.csproj'
